.classic-linear{font-size:12px}@media screen and (min-width:600px){.classic-linear{font-size:calc(4vw - 12px)}}@media screen and (min-width:900px){.classic-linear{font-size:24px}}.easy-peasy{font-size:12px}@media screen and (min-width:600px){.easy-peasy{font-size:calc(3.11111vw - 6.66667px)}}@media screen and (min-width:700px){.easy-peasy{font-size:calc(5.77778vw - 25.33333px)}}@media screen and (min-width:800px){.easy-peasy{font-size:calc(3.11111vw - 4px)}}@media screen and (min-width:900px){.easy-peasy{font-size:24px}}.cubic-bezier{font-size:12px}@media screen and (min-width:600px){.cubic-bezier{font-size:calc(.87111vw + 6.77333px)}}@media screen and (min-width:700px){.cubic-bezier{font-size:calc(3.13778vw - 9.09333px)}}@media screen and (min-width:800px){.cubic-bezier{font-size:calc(7.99111vw - 47.92px)}}@media screen and (min-width:900px){.cubic-bezier{font-size:24px}}.bloat-my-css{font-size:12px}@media screen and (min-width:600px){.bloat-my-css{font-size:calc(1.55102vw + 2.69388px)}}@media screen and (min-width:642.85714px){.bloat-my-css{font-size:calc(4vw - 13.04956px)}}@media screen and (min-width:685.71429px){.bloat-my-css{font-size:calc(5.46939vw - 23.12536px)}}@media screen and (min-width:728.57143px){.bloat-my-css{font-size:calc(5.95918vw - 26.69388px)}}@media screen and (min-width:771.42857px){.bloat-my-css{font-size:calc(5.46939vw - 22.91545px)}}@media screen and (min-width:814.28571px){.bloat-my-css{font-size:calc(4vw - 10.95044px)}}@media screen and (min-width:857.14286px){.bloat-my-css{font-size:calc(1.55102vw + 10.04082px)}}@media screen and (min-width:900px){.bloat-my-css{font-size:24px}}.bgwhite{background:#fff}.bggrey{background:#f3f3f3}.bgblack{background:#1a1a1a}section{padding-left:15px;padding-right:15px}@media screen and (min-width:768px){section{padding-left:calc(4.20673vw - 17.30769px);padding-right:calc(4.20673vw - 17.30769px)}}@media screen and (min-width:1600px){section{padding-left:50px;padding-right:50px}}@media only screen and (min-width:2000px){section{padding-left:calc((100vw - 1600px)/2);padding-right:calc((100vw - 1600px)/2)}}section>header{padding:2vw}.articles_featured,.articles_news,.index_archiveis,.projects,.vspacer{padding-top:1.6vw;padding-bottom:3vw}.articles,.articles_featured>div,.c2,.c3,.c4,.c6,.flex,.index_links,.projects_list,.projects_nav{display:-webkit-flex;display:flex;-webkit-flex-flow:row wrap;flex-flow:row wrap}.c2>div,.projects_nav>div{-webkit-flex-basis:50%;flex-basis:50%}.c3>div{-webkit-flex-basis:33.33333%;flex-basis:33.33333%;padding:2vw}.c4>div,.index_links>div,.projects_list>div{-webkit-flex-basis:50%;flex-basis:50%;padding:2vw}@media only screen and (min-width:1024px){.c4>div,.index_links>div,.projects_list>div{-webkit-flex-basis:25%;flex-basis:25%}}.c6>div{-webkit-flex-basis:16.66667%;flex-basis:16.66667%;padding:2vw}*{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline;box-sizing:border-box;text-decoration:none;color:#1a1a1a}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1;-webkit-font-smoothing:antialiased}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:"";content:none}table{border-collapse:collapse;border-spacing:0}.ajax{min-height:100vh}a{color:#1a1a1a}img{max-width:100%;height:auto;opacity:1;transition:opacity .3s cubic-bezier(.57,.13,.43,.87)}img[data-src]{opacity:0}img[data-src].loaded{opacity:1}::selection{background:#ff827a}@font-face{font-family:Deckard;font-weight:700;font-style:normal}@font-face{font-family:Deckard;font-weight:500;font-style:normal}@font-face{font-family:Deckard;font-weight:400;font-style:italic}@font-face{font-family:Deckard;font-weight:400;font-style:normal}.superdisplay{font-family:Deckard,Helvetica Neue,Helvetica,Arial,sans-serif;font-weight:900;line-height:.9em;font-size:60px}@media screen and (min-width:768px){.superdisplay{font-size:calc(7.21154vw + 4.61538px)}}@media screen and (min-width:1600px){.superdisplay{font-size:120px}}@media only screen and (min-width:1024px){.superdisplay{letter-spacing:-2px}}.display,h1,h2{font-family:Deckard,Helvetica Neue,Helvetica,Arial,sans-serif;font-weight:400;line-height:1.2em;font-size:28px}@media screen and (min-width:768px){.display,h1,h2{font-size:calc(.48077vw + 24.30769px)}}@media screen and (min-width:1600px){.display,h1,h2{font-size:32px}}.largetext,h3,h4,h5{font-family:Deckard,Helvetica Neue,Helvetica,Arial,sans-serif;font-size:18px;line-height:1.25em;font-weight:400}@media screen and (min-width:768px){.largetext,h3,h4,h5{font-size:calc(.72115vw + 12.46154px)}}@media screen and (min-width:1600px){.largetext,h3,h4,h5{font-size:24px}}.projects_nav li a,.projects_project h3,.text,a,div,header h4,li,p,time{font-family:Deckard,Helvetica Neue,Helvetica,Arial,sans-serif;font-size:16px;line-height:1.4em}@media screen and (min-width:768px){.projects_nav li a,.projects_project h3,.text,a,div,header h4,li,p,time{font-size:calc(.24038vw + 14.15385px)}}@media screen and (min-width:1600px){.projects_nav li a,.projects_project h3,.text,a,div,header h4,li,p,time{font-size:18px}}.btn,.projects_nav li a,.smallcaps,header h4{letter-spacing:1px;text-transform:uppercase}.btn{background:#1a1a1a;color:#fff;padding:10px 10px 7px;transition:all .3s ease}.articles{background:rgba(0,0,0,.05)}.articles_featured{-webkit-flex:2;flex:2;border-right:3px solid #fff;padding-right:2vw}.articles_featured header{padding:2vw}.articles_article{-webkit-flex:1;flex:1;padding:2vw}.articles_article img{padding-bottom:8px;transition:all .3s ease}.articles_article h3,.articles_article p,.articles_article time{padding-bottom:6px;transition:all .3s ease}.articles_article time{display:block}.articles_article h3{padding-left:15px;transition:all .3s ease}.articles_article p{padding-left:30px;transition:all .3s ease}.articles_article:hover img{-webkit-transform:scale(1.03) translatey(-4px);transform:scale(1.03) translatey(-4px)}.articles_article:hover h3{-webkit-transform:translateX(-15px);transform:translateX(-15px)}.articles_article:hover p{-webkit-transform:translateX(-30px);transform:translateX(-30px)}.articles_news{-webkit-flex:1;flex:1;padding-left:2vw}.articles_news header{padding:2vw}footer{background:#fff;overflow:auto}footer li{display:inline-block}.smallprint{float:left}.social{float:right}header.header{display:-webkit-flex;display:flex;-webkit-flex-flow:row wrap;flex-flow:row wrap}header_logo{-webkit-flex:1;flex:1}header_nav{-webkit-flex:3;flex:3}.menu li{display:inline-block}.index_archiveis{background:#1a1a1a}.index_archiveis h4,.index_archiveis p{color:#fff}.index_archiveis a{color:#fff;border-bottom:1px solid #fff}.projects_nav{width:100%}.projects_nav ul{text-align:right}.projects_nav li{display:inline-block;padding-left:2vw}.projects_list>div{padding-bottom:3vw}.projects_project img{padding-bottom:6px;transition:all .3s ease}.projects_project h3{padding-bottom:4px}.projects_project p.credit{padding-bottom:4px;transition:all .3s ease;padding-left:15px}.projects_project:hover img{-webkit-transform:scale(1.03) translatey(-4px);transform:scale(1.03) translatey(-4px)}.projects_project:hover p.credit{-webkit-transform:translateX(-15px);transform:translateX(-15px)}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
