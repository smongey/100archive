// Grid
// main page wrap – determines by padding on the main wrap div.
@mixin wrap {
    // blend from 15px wide on mobile to 50px wide on large desktop
    @include ip((padding-left, padding-right), $sm, 15px, $xl, 50px);
    
    // anything super large cut it off at 1600 wide to stop the madness
    @include super {
        padding-left: calc((100vw - 1600px) / 2);
        padding-right: calc((100vw - 1600px) / 2);
    }
}

// default spacing and type styles for a section element
section {
    padding: $gutter*.8 $gutter $gutter;
    
    // headers within sections
    header {
        display: flex;
        justify-content: space-between;
        padding: 0 $gutter/2 $gutter;
        // all h4’s that are direct children of the header
        & > h4 {
            flex: 1;
            @extend .smallcaps;
        }
    }
    @include xl {
        // padding: $gutter $gutter*2;
        & > header {
            // padding-left: $gutter;
        }
    }
}

.pad {
    padding-left: $gutter*1.5;
    padding-right: $gutter*1.5;
}

// flex so I’m not repeating myself below
.flex {
    display: flex;
    flex-flow: row wrap;
}


// two columns
.c2 {
    @extend .flex;
    // divs that are direct children of .c2 (same for each)
    & > div {
        flex-basis: calc(100% / 2);
        padding: 0 $gutter/2;
    }
}

// three columns
.c3 {
    @extend .flex;
    & > div {
        flex-basis: calc(100% / 3);
        padding: 0 $gutter/2;
    }
}

// four columns
.c4 {
    @extend .flex;
    width: 100%;
    & > div {
        flex-basis: calc(100% / 2);
        padding: 0 $gutter/2;
        @include md {
            flex-basis: calc(100% / 4);
        }
    }
}

// six columns
.c6 {
    @extend .flex;
    justify-content: space-between;
    & > div {
        flex-basis: calc(100% / 6);
        padding: 0 $gutter/2;
    }
}

// split column (2 to 1)
.c21 {
    @extend .flex;
    // divs that are direct children of .c2 (same for each)
    & > div {
        padding: 0 $gutter/2;
        &:first-child {
            flex-basis: calc(100% / 3 * 2);
        }
        &:last-child {
            flex-basis: calc(100% / 3);
        }
        
    }
}


// split column (1 to 2)
.c12 {
    @extend .flex;
    // divs that are direct children of .c2 (same for each)
    & > div {
        padding: 0 $gutter/2;
        &:last-child {
            flex-basis: calc(100% / 3 * 2);
        }
        &:first-child {
            flex-basis: calc(100% / 3);
        }   
    }

}