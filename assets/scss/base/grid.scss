// Grid
// main page wrap – determines by padding on the main wrap div.
@mixin wrap {
    // blend from 15px wide on mobile to 50px wide on large desktop
    @include ip((padding-left, padding-right), $sm, 15px, $xl, 50px);

    // anything super large cut it off at 1600 wide to stop the madness
    @include super {
        padding-left: calc((100vw - 1600px) / 2);
        padding-right: calc((100vw - 1600px) / 2);
    }
}

// default spacing and type styles for a section element
section {
    padding: $gutter/2;

    // headers within sections
    header {
        // padding-left: $gutter/2;
        padding-bottom: $gutter/2;
        // all h4’s that are direct children of the header
        & > h4 {
            @extend .smallcaps;
        }
    }
    @include xl {
        // padding: $gutter $gutter*2;
        & > header {
            // padding-left: $gutter;
        }
    }
}

// flex so I’m not repeating myself below
.flex {
    display: flex;
    flex-flow: row wrap;
}


// two columns
.c2 {
    @extend .flex;
    // divs that are direct children of .c2 (same for each)
    & > div {
        flex-basis: calc(100% / 2);
        padding: 0 $gutter/2;
    }
}

// three columns
.c3 {
    @extend .flex;
    & > div {
        flex-basis: calc(100% / 3);
        padding: 0 $gutter/2;
    }
}

// four columns
.c4 {
    @extend .flex;
    width: 100%;
    & > div {
        flex-basis: calc(100% / 2);
        padding: 0 $gutter/2;
        @include md {
            flex-basis: calc(100% / 4);
        }
    }
}

// six columns
.c6 {
    @extend .flex;
    justify-content: space-between;
    & > div {
        flex-basis: calc(100% / 6);
        padding: 0 $gutter/2;
    }
}

// CSS Grid System

// Standard page grid with header sections
@mixin standard-grid {
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  grid-template-rows: 20vh 80px auto 20vh auto;
}

.standard-grid {
  @include standard-grid;

  .title {
    grid-column: 4 / span 2;
    grid-row: 2;
  }

  .text_two {
    grid-column: 2 / span 1;
    grid-row: 3;
  }

  .text_right {
    grid-column: 4 / span 2;
    grid-row: 3;
  }

  .filter_container {
    grid-column: 1/ span 3;
    grid-row: 5;
    margin-bottom: $gutter;
  }

  .projects_container {
    grid-column: 1/ span 6;
    grid-row: 6;
  }
}

// six column
.6col {
  grid-template-columns: repeat(6, 1fr);
}
