.classic-linear{font-size:12px}@media screen and (min-width:600px){.classic-linear{font-size:calc(4vw - 12px)}}@media screen and (min-width:900px){.classic-linear{font-size:24px}}.easy-peasy{font-size:12px}@media screen and (min-width:600px){.easy-peasy{font-size:calc(3.11111vw - 6.66667px)}}@media screen and (min-width:700px){.easy-peasy{font-size:calc(5.77778vw - 25.33333px)}}@media screen and (min-width:800px){.easy-peasy{font-size:calc(3.11111vw - 4px)}}@media screen and (min-width:900px){.easy-peasy{font-size:24px}}.cubic-bezier{font-size:12px}@media screen and (min-width:600px){.cubic-bezier{font-size:calc(.87111vw + 6.77333px)}}@media screen and (min-width:700px){.cubic-bezier{font-size:calc(3.13778vw - 9.09333px)}}@media screen and (min-width:800px){.cubic-bezier{font-size:calc(7.99111vw - 47.92px)}}@media screen and (min-width:900px){.cubic-bezier{font-size:24px}}.bloat-my-css{font-size:12px}@media screen and (min-width:600px){.bloat-my-css{font-size:calc(1.55102vw + 2.69388px)}}@media screen and (min-width:642.85714px){.bloat-my-css{font-size:calc(4vw - 13.04956px)}}@media screen and (min-width:685.71429px){.bloat-my-css{font-size:calc(5.46939vw - 23.12536px)}}@media screen and (min-width:728.57143px){.bloat-my-css{font-size:calc(5.95918vw - 26.69388px)}}@media screen and (min-width:771.42857px){.bloat-my-css{font-size:calc(5.46939vw - 22.91545px)}}@media screen and (min-width:814.28571px){.bloat-my-css{font-size:calc(4vw - 10.95044px)}}@media screen and (min-width:857.14286px){.bloat-my-css{font-size:calc(1.55102vw + 10.04082px)}}@media screen and (min-width:900px){.bloat-my-css{font-size:24px}}.black{background:#1a1a1a}.black a,.black h1,.black h2,.black h3,.black h4,.black h5,.black h6,.black li,.black p{color:#fff}.grey{background:#f3f3f3}.ul{border-bottom:1px solid #1a1a1a}.black .ul{border-bottom:1px solid #fff}.right{float:right}section{padding:2vw 0}section header{padding-left:2vw;padding-bottom:4vw}.articles,.articles_featured>div,.c2,.c3,.c4,.c6,.flex,.index_links,.nav{display:-webkit-flex;display:flex;-webkit-flex-flow:row wrap;flex-flow:row wrap}.c2>div{-webkit-flex-basis:50%;flex-basis:50%;padding:0 2vw}.c3>div{-webkit-flex-basis:33.33333%;flex-basis:33.33333%;padding:0 2vw}.c4,.index_links{width:100%}.c4>div,.index_links>div{-webkit-flex-basis:50%;flex-basis:50%;padding:0 2vw}@media only screen and (min-width:1024px){.c4>div,.index_links>div{-webkit-flex-basis:25%;flex-basis:25%}}.c6{-webkit-justify-content:space-between;justify-content:space-between}.c6>div{-webkit-flex-basis:16.66667%;flex-basis:16.66667%;padding:0 2vw}*{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline;box-sizing:border-box;text-decoration:none;color:#1a1a1a}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1;-webkit-font-smoothing:antialiased}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:"";content:none}table{border-collapse:collapse;border-spacing:0}.ajax{min-height:100vh}a{color:#1a1a1a}img{max-width:100%;height:auto;opacity:1;transition:opacity .3s ease}img[data-src]{opacity:0}img[data-src].loaded{opacity:1}::selection{background:#ff827a}@font-face{font-family:Deckard;src:url(/assets/fonts/Deckard-Regular.woff) format("woff");font-weight:400;font-style:normal}.superdisplay{font-family:Deckard,Helvetica Neue,Helvetica,Arial,sans-serif;font-weight:900;line-height:.9em;font-size:60px}@media screen and (min-width:768px){.superdisplay{font-size:calc(7.21154vw + 4.61538px)}}@media screen and (min-width:1600px){.superdisplay{font-size:120px}}@media only screen and (min-width:1024px){.superdisplay{letter-spacing:-2px}}.display,.intro_title h2,.title{font-family:Deckard,Helvetica Neue,Helvetica,Arial,sans-serif;font-weight:400;line-height:1.2em;font-size:28px}@media screen and (min-width:768px){.display,.intro_title h2,.title{font-size:calc(.48077vw + 24.30769px)}}@media screen and (min-width:1600px){.display,.intro_title h2,.title{font-size:32px}}.largetext{font-family:Deckard,Helvetica Neue,Helvetica,Arial,sans-serif;font-size:18px;line-height:1.25em;font-weight:400}@media screen and (min-width:768px){.largetext{font-size:calc(.72115vw + 12.46154px)}}@media screen and (min-width:1600px){.largetext{font-size:24px}}.filter button,.filter input,.text,a,h1,h2,h3,h4,h5,h6,li,p,span{font-family:Deckard,Helvetica Neue,Helvetica,Arial,sans-serif;font-size:16px;line-height:1.4em}@media screen and (min-width:768px){.filter button,.filter input,.text,a,h1,h2,h3,h4,h5,h6,li,p,span{font-size:calc(.24038vw + 14.15385px)}}@media screen and (min-width:1600px){.filter button,.filter input,.text,a,h1,h2,h3,h4,h5,h6,li,p,span{font-size:18px}}.btn,.smallcaps,section header>h4{letter-spacing:1px;text-transform:uppercase}.black .title{color:#fff}.indent,.title{margin-left:2vw}input[type=text]{background:transparent;border-bottom:1px solid #1a1a1a}p{margin-bottom:1.4em}.archives{display:grid;grid-template-columns:repeat(6,1fr);grid-template-rows:20vh 80px auto 20vh auto}.archives .title{grid-column:4/span 2;grid-row:2}.archives .text_two{grid-column:2/span 1;grid-row:3}.archives .text_right{grid-column:4/span 2;grid-row:3}.archives .filter_container{grid-column:1/span 3;grid-row:5;padding-left:2vw}.archives .projects_container{grid-column:1/span 6;grid-row:6}.articles{padding-top:0;padding-bottom:0;background:rgba(0,0,0,.05)}.articles_featured{-webkit-flex:2;flex:2;border-right:3px solid #fff}.articles_featured header{padding-top:2vw}.articles_news{-webkit-flex:1;flex:1}.articles_news header{padding-top:2vw}.articles_news>div{padding:0 2vw 2vw}.articles_news>div .thumb{padding:0}.btn{background:#1a1a1a;color:#fff;padding:7px 10px;transition:all .3s ease}.btn-series{position:absolute;top:0}.filter{margin-bottom:2vw}.filter button,.filter input{background:none;border-bottom:1px solid #1a1a1a;width:100%;text-align:left;padding:10px 0}.black .filter button,.black .filter input{color:#fff;border-bottom:1px solid #fff}.filter button::-webkit-input-placeholder,.filter input::-webkit-input-placeholder{color:#1a1a1a}.filter button:-ms-input-placeholder,.filter input:-ms-input-placeholder{color:#1a1a1a}.filter button::-ms-input-placeholder,.filter input::-ms-input-placeholder{color:#1a1a1a}.filter button::placeholder,.filter input::placeholder{color:#1a1a1a}.black .filter button::-webkit-input-placeholder,.black .filter input::-webkit-input-placeholder{color:#fff}.black .filter button:-ms-input-placeholder,.black .filter input:-ms-input-placeholder{color:#fff}.black .filter button::-ms-input-placeholder,.black .filter input::-ms-input-placeholder{color:#fff}.black .filter button::placeholder,.black .filter input::placeholder{color:#fff}.filter button:focus,.filter input:focus{outline:none}.filter .hidden{display:none}.filter>div{padding-left:0}footer{background:#fff;overflow:auto;position:relative;clear:both;display:block;padding:2vw}footer li{display:inline-block;margin-right:20px}.smallprint{float:left}.social{float:right}.grid{position:fixed;top:-4vw;width:100%;height:100%;z-index:9999;pointer-events:none;opacity:0;transition:all .3s ease}.grid.active{opacity:1}.grid>div.c4,.grid>div.index_links{-webkit-transform:translateY(-100%);transform:translateY(-100%)}.grid>div>div span{display:block;width:100%;height:100vh;background:rgba(255,0,0,.1)}.images figure{text-align:right}.images img{width:100%;height:auto;margin-bottom:60px}.index_archiveis{background:#1a1a1a}.index_archiveis h4,.index_archiveis p{color:#fff}.index_archiveis a{color:#fff;border-bottom:1px solid #fff}.intro{position:relative;width:100vw;height:100vh;background:#fff;overflow:hidden}@media only screen and (min-width:1600px){.intro{height:75vh}}.intro_title{position:absolute;width:43vw;bottom:8vw;z-index:1;padding-left:2vw}@media only screen and (min-width:1600px){.intro_title{width:30vw}}.menu{position:fixed;z-index:3;right:2vw;display:-webkit-flex;display:flex;padding-top:2vw}.menu.black{background:none}.menu_burger{margin-left:1.33333vw}.menu_burger,.menu_burger a{position:relative;display:inline-block}.menu_burger a{width:27px;height:27px;-webkit-transform:scaleX(1) scaleY(1);transform:scaleX(1) scaleY(1)}.menu_burger span{position:absolute;width:65%;height:1px;background:#1a1a1a;top:25%;left:15%;transition:all .3s ease}.black .menu_burger span{background:#fff}.menu_burger span:nth-child(2){top:50%}.menu_burger span:last-child{top:75%}.menu_burger:hover a span{height:1px;-webkit-transform:scaleX(1.2) scaleY(1);transform:scaleX(1.2) scaleY(1)}.menu_burger:hover a span:nth-child(2){height:1px;-webkit-transform:scaleX(.7);transform:scaleX(.7)}.menu_burger:hover a span:last-child{height:1px;-webkit-transform:scaleX(1.2) scaleY(1);transform:scaleX(1.2) scaleY(1)}.menu_search,.menu_search a{position:relative;display:inline-block}.menu_search a{width:30px;height:30px;background:transparent url(../images/search.svg) 50% no-repeat;text-indent:-9999px}.black .menu_search a{background:transparent url(../images/search-white.svg) 50% no-repeat}.menu_menu{position:fixed;top:0;right:0;z-index:3;min-width:23vw;padding:4.8vw 12vw 12vw 4.8vw;background:#fff;box-shadow:0 0 20px rgba(0,0,0,.25);-webkit-transform:translateY(-1%);transform:translateY(-1%);opacity:0;pointer-events:none;transition:all .3s ease}.menu_menu.active{-webkit-transform:translateY(0);transform:translateY(0);opacity:1;pointer-events:auto}.menu_menu li{padding-bottom:6px}.menu_menu ul{padding-bottom:15px}.menu_menu_close{position:absolute;display:block;width:25px;height:25px;right:8vw}.menu_menu_close:after,.menu_menu_close:before{content:"";display:block;position:absolute;left:50%;top:50%;-webkit-transform:translate(-50%,-50%) rotate(45deg);transform:translate(-50%,-50%) rotate(45deg);width:1px;height:60%;background:#1a1a1a;transition:all .3s ease}.menu_menu_close:before{-webkit-transform:translate(-50%,-50%) rotate(-45deg);transform:translate(-50%,-50%) rotate(-45deg)}.menu_menu_close:hover:after{-webkit-transform:translate(-50%,-50%) rotate(90deg);transform:translate(-50%,-50%) rotate(90deg)}.menu_menu_close:hover:before{opacity:0}.menu_menu_join{position:absolute;background:#4adb73;width:100%;left:0;bottom:0;padding:15px 15px 15px 4.8vw}.menu_results{position:fixed;right:0;height:100%;width:40vw;z-index:1;background:#c4c4c4;padding:6vw 8vw;-webkit-transform:translateX(calc(100% + 1px));transform:translateX(calc(100% + 1px))}.nav{padding:2vw;position:absolute;width:100%;z-index:1}.nav_logo,.nav_nav{-webkit-flex:1;flex:1}.nav_nav li{padding:0 2vw 0 0;display:inline-block}.black .nav{color:#fff}.project{display:grid;grid-template-columns:repeat(6,1fr);grid-template-rows:20vh 105px auto 20vh auto}.project .title{grid-column:4/span 2;grid-row:2}.project .text_two{grid-column:2/span 1;grid-row:3}.project .text_right{grid-column:4/span 2;grid-row:3}.project .images{grid-column:2/span 5;grid-row:5}.stack{width:60vw;right:0;height:100%}.stack,.stack li{position:absolute}.stack li{top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);transition:all .3s ease}.stack li:hover{z-index:1}.stack li.stack_one{-webkit-transform:translate(-85%,-75%);transform:translate(-85%,-75%)}.stack li.stack_two{-webkit-transform:translate(-25%,-50%);transform:translate(-25%,-50%)}.stack li.stack_three{-webkit-transform:translate(-60%,-10%);transform:translate(-60%,-10%)}.strip{display:grid;grid-template-columns:2vw 1fr 1fr 2vw;grid-template-rows:auto 200px;height:400px;float:left;position:relative}.strip.two{width:50%}.strip.join{background-color:#30f0c2}.strip.newsletter{background-color:#f3f3f3}.strip .header{grid-column:2;grid-row:1}.strip .content{grid-column:2;grid-row:2;align-self:end}.thumb{position:relative;padding:4vw}.thumb img{padding-bottom:8px;transition:all .3s ease}.thumb h3,.thumb h4,.thumb p,.thumb time{padding-bottom:6px;transition:all .3s ease}.thumb .thumb_indent{padding-left:15px}.thumb .thumb_doubleindent{padding-left:30px}.thumb:hover h3{-webkit-transform:translateX(-15px);transform:translateX(-15px)}.thumb:hover p{-webkit-transform:translateX(-30px);transform:translateX(-30px)}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
