.classic-linear{font-size:12px}@media screen and (min-width:600px){.classic-linear{font-size:calc(4vw - 12px)}}@media screen and (min-width:900px){.classic-linear{font-size:24px}}.easy-peasy{font-size:12px}@media screen and (min-width:600px){.easy-peasy{font-size:calc(3.11111vw - 6.66667px)}}@media screen and (min-width:700px){.easy-peasy{font-size:calc(5.77778vw - 25.33333px)}}@media screen and (min-width:800px){.easy-peasy{font-size:calc(3.11111vw - 4px)}}@media screen and (min-width:900px){.easy-peasy{font-size:24px}}.cubic-bezier{font-size:12px}@media screen and (min-width:600px){.cubic-bezier{font-size:calc(.87111vw + 6.77333px)}}@media screen and (min-width:700px){.cubic-bezier{font-size:calc(3.13778vw - 9.09333px)}}@media screen and (min-width:800px){.cubic-bezier{font-size:calc(7.99111vw - 47.92px)}}@media screen and (min-width:900px){.cubic-bezier{font-size:24px}}.bloat-my-css{font-size:12px}@media screen and (min-width:600px){.bloat-my-css{font-size:calc(1.55102vw + 2.69388px)}}@media screen and (min-width:642.85714px){.bloat-my-css{font-size:calc(4vw - 13.04956px)}}@media screen and (min-width:685.71429px){.bloat-my-css{font-size:calc(5.46939vw - 23.12536px)}}@media screen and (min-width:728.57143px){.bloat-my-css{font-size:calc(5.95918vw - 26.69388px)}}@media screen and (min-width:771.42857px){.bloat-my-css{font-size:calc(5.46939vw - 22.91545px)}}@media screen and (min-width:814.28571px){.bloat-my-css{font-size:calc(4vw - 10.95044px)}}@media screen and (min-width:857.14286px){.bloat-my-css{font-size:calc(1.55102vw + 10.04082px)}}@media screen and (min-width:900px){.bloat-my-css{font-size:24px}}.black{background:#1a1a1a}.black a,.black h1,.black h2,.black h3,.black h4,.black h5,.black h6,.black li,.black p{color:#fff}.grey{background:#f3f3f3}.ul{border-bottom:1px solid #1a1a1a}.black .ul{border-bottom:1px solid #fff}.right{float:right}section{padding:4vw}section header{padding-left:2vw;padding-bottom:4vw}.c2,.c3,.c4,.c6,.flex,.index_links,.nav{display:-webkit-flex;display:flex;-webkit-flex-flow:row wrap;flex-flow:row wrap}.c2>div{-webkit-flex-basis:50%;flex-basis:50%;padding:0 2vw}.c3>div{-webkit-flex-basis:33.33333%;flex-basis:33.33333%;padding:0 2vw}.c4,.index_links{width:100%}.c4>div,.index_links>div{-webkit-flex-basis:50%;flex-basis:50%;padding:0 2vw}@media only screen and (min-width:1024px){.c4>div,.index_links>div{-webkit-flex-basis:25%;flex-basis:25%}}.c6{-webkit-justify-content:space-between;justify-content:space-between}.c6>div{-webkit-flex-basis:16.66667%;flex-basis:16.66667%;padding:0 2vw}.grid{position:fixed;top:-4vw;width:100%;height:100%;z-index:9999;pointer-events:none;opacity:0;transition:all .3s ease}.grid.active{opacity:1}.grid>div.c4,.grid>div.index_links{-webkit-transform:translateY(-100%);transform:translateY(-100%)}.grid>div>div span{display:block;width:100%;height:100vh;background:rgba(255,0,0,.1)}*{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline;box-sizing:border-box;text-decoration:none;color:#1a1a1a}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1;-webkit-font-smoothing:antialiased}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:"";content:none}table{border-collapse:collapse;border-spacing:0}.ajax{min-height:100vh}a{color:#1a1a1a}img{max-width:100%;height:auto;opacity:1;transition:opacity .3s ease}img[data-src]{opacity:0}img[data-src].loaded{opacity:1}::selection{background:#ff827a}@font-face{font-family:Deckard;src:url(/assets/fonts/Deckard-Regular.woff) format("woff");font-weight:400;font-style:normal}.superdisplay{font-family:Deckard,Helvetica Neue,Helvetica,Arial,sans-serif;font-weight:900;line-height:.9em;font-size:60px}@media screen and (min-width:768px){.superdisplay{font-size:calc(7.21154vw + 4.61538px)}}@media screen and (min-width:1600px){.superdisplay{font-size:120px}}@media only screen and (min-width:1024px){.superdisplay{letter-spacing:-2px}}.display,.intro_title h2{font-family:Deckard,Helvetica Neue,Helvetica,Arial,sans-serif;font-weight:400;line-height:1.2em;font-size:28px}@media screen and (min-width:768px){.display,.intro_title h2{font-size:calc(.48077vw + 24.30769px)}}@media screen and (min-width:1600px){.display,.intro_title h2{font-size:32px}}.largetext{font-family:Deckard,Helvetica Neue,Helvetica,Arial,sans-serif;font-size:18px;line-height:1.25em;font-weight:400}@media screen and (min-width:768px){.largetext{font-size:calc(.72115vw + 12.46154px)}}@media screen and (min-width:1600px){.largetext{font-size:24px}}.text,a,h1,h2,h3,h4,h5,h6,li,p,span{font-family:Deckard,Helvetica Neue,Helvetica,Arial,sans-serif;font-size:16px;line-height:1.4em}@media screen and (min-width:768px){.text,a,h1,h2,h3,h4,h5,h6,li,p,span{font-size:calc(.24038vw + 14.15385px)}}@media screen and (min-width:1600px){.text,a,h1,h2,h3,h4,h5,h6,li,p,span{font-size:18px}}.btn,.smallcaps,section header>h4{letter-spacing:1px;text-transform:uppercase}input[type=text]{background:transparent;border-bottom:1px solid #1a1a1a}input[type=text]::-webkit-input-placeholder{color:#1a1a1a}input[type=text]:-ms-input-placeholder{color:#1a1a1a}input[type=text]::-ms-input-placeholder{color:#1a1a1a}input[type=text]::placeholder{color:#1a1a1a}.btn{background:#1a1a1a;color:#fff;padding:10px 10px 7px;transition:all .3s ease}footer{background:#fff;overflow:auto}footer li{display:inline-block}.smallprint{float:left}.social{float:right}.index_archiveis{background:#1a1a1a}.index_archiveis h4,.index_archiveis p{color:#fff}.index_archiveis a{color:#fff;border-bottom:1px solid #fff}.intro{position:relative;width:100vw;height:100vh;background:#fff;overflow:hidden}@media only screen and (min-width:1600px){.intro{height:75vh}}.intro_title{position:absolute;width:43vw;bottom:8vw;z-index:1;padding-left:2vw}@media only screen and (min-width:1600px){.intro_title{width:30vw}}.menu{position:fixed;z-index:3;right:4vw;display:-webkit-flex;display:flex}.menu_burger{margin-left:1.33333vw;margin-top:4vw}.menu_burger,.menu_burger a{position:relative;display:inline-block}.menu_burger a{width:27px;height:27px;-webkit-transform:scaleX(1) scaleY(1);transform:scaleX(1) scaleY(1)}.menu_burger span{position:absolute;width:65%;height:1px;background:#1a1a1a;top:25%;left:15%;transition:all .3s ease}.menu_burger span:nth-child(2){top:50%}.menu_burger span:last-child{top:75%}.menu_burger:hover a span{height:1px;-webkit-transform:scaleX(1.2) scaleY(1);transform:scaleX(1.2) scaleY(1)}.menu_burger:hover a span:nth-child(2){height:1px;-webkit-transform:scaleX(.7);transform:scaleX(.7)}.menu_burger:hover a span:last-child{height:1px;-webkit-transform:scaleX(1.2) scaleY(1);transform:scaleX(1.2) scaleY(1)}.menu_search{margin-top:4vw}.menu_search,.menu_search a{position:relative;display:inline-block}.menu_search a{width:30px;height:30px;background:transparent url(../images/search.svg) 50% no-repeat;text-indent:-9999px}.menu_menu{position:fixed;top:0;right:0;z-index:3;min-width:23vw;padding:4.8vw 12vw 12vw 4.8vw;background:#fff;box-shadow:0 0 20px rgba(0,0,0,.25);-webkit-transform:translateY(-1%);transform:translateY(-1%);opacity:0;pointer-events:none;transition:all .3s ease}.menu_menu.active{-webkit-transform:translateY(0);transform:translateY(0);opacity:1;pointer-events:auto}.menu_menu li{padding-bottom:6px}.menu_menu ul{padding-bottom:15px}.menu_menu_close{position:absolute;display:block;width:25px;height:25px;right:8vw}.menu_menu_close:after,.menu_menu_close:before{content:"";display:block;position:absolute;left:50%;top:50%;-webkit-transform:translate(-50%,-50%) rotate(45deg);transform:translate(-50%,-50%) rotate(45deg);width:1px;height:60%;background:#1a1a1a;transition:all .3s ease}.menu_menu_close:before{-webkit-transform:translate(-50%,-50%) rotate(-45deg);transform:translate(-50%,-50%) rotate(-45deg)}.menu_menu_close:hover:after{-webkit-transform:translate(-50%,-50%) rotate(90deg);transform:translate(-50%,-50%) rotate(90deg)}.menu_menu_close:hover:before{opacity:0}.menu_menu_join{position:absolute;background:#4adb73;width:100%;left:0;bottom:0;padding:15px 15px 15px 4.8vw}.menu_results{position:fixed;right:0;height:100%;width:40vw;z-index:1;background:#c4c4c4;padding:6vw 8vw;-webkit-transform:translateX(calc(100% + 1px));transform:translateX(calc(100% + 1px))}.nav{padding:0 4vw;position:absolute;width:100%;z-index:1}@media screen and (min-width:768px){.nav{padding-left:calc(4.20673vw - 17.30769px);padding-right:calc(4.20673vw - 17.30769px)}}@media screen and (min-width:1600px){.nav{padding-left:50px;padding-right:50px}}@media only screen and (min-width:2000px){.nav{padding-left:calc((100vw - 1600px)/2);padding-right:calc((100vw - 1600px)/2)}}.nav_logo,.nav_nav{-webkit-flex:1;flex:1;padding:4vw 2vw}.nav_nav li{padding:0 2vw 0 0;display:inline-block}.stack{width:60vw;right:0;height:100%}.stack,.stack li{position:absolute}.stack li{top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);transition:all .3s ease}.stack li:hover{z-index:1}.stack li.stack_one{-webkit-transform:translate(-85%,-75%);transform:translate(-85%,-75%)}.stack li.stack_two{-webkit-transform:translate(-25%,-50%);transform:translate(-25%,-50%)}.stack li.stack_three{-webkit-transform:translate(-60%,-10%);transform:translate(-60%,-10%)}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzL21peGlucy5zY3NzIiwidXRpbHMvdXRpbHMuc2NzcyIsInV0aWxzL3ZhcmlhYmxlcy5zY3NzIiwiYmFzZS9ncmlkLnNjc3MiLCJiYXNlL3Jlc2V0LnNjc3MiLCJiYXNlL3R5cG9ncmFwaHkuc2NzcyIsImNvbXBvbmVudHMvYnRuLnNjc3MiLCJjb21wb25lbnRzL2Zvb3Rlci5zY3NzIiwiY29tcG9uZW50cy9pbmRleC5zY3NzIiwiY29tcG9uZW50cy9pbnRyby5zY3NzIiwiY29tcG9uZW50cy9tZW51LnNjc3MiLCJjb21wb25lbnRzL25hdi5zY3NzIiwiY29tcG9uZW50cy9zdGFjay5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTJUQSxnQkE3TFEsY0E4TGdDLENBMUxoQyxvQ0F5TFIsZ0JBdkxnQiwwQkFzRGdDLENBbUkvQyxDQW5KRyxvQ0FpSkosZ0JBL0lZLGNBZ0p5QyxDQUNwRCxDQUNELFlBaE1RLGNBaU1nQyxDQXRLNUIsb0NBcUtaLFlBbktvQixxQ0ErQjRCLENBc0kvQyxDQXZLVyxvQ0FxS1osWUFuS29CLHNDQStCNEIsQ0FzSS9DLENBdktXLG9DQXFLWixZQW5Lb0IsK0JBK0I0QixDQXNJL0MsQ0F0Skcsb0NBb0pKLFlBbEpZLGNBbUp5QyxDQUNwRCxDQUNELGNBbk1RLGNBdU1JLENBNUtBLG9DQXdLWixjQXRLb0Isb0NBK0I0QixDQWdKL0MsQ0FqTFcsb0NBd0taLGNBdEtvQixxQ0ErQjRCLENBZ0ovQyxDQWpMVyxvQ0F3S1osY0F0S29CLG1DQStCNEIsQ0FnSi9DLENBaEtHLG9DQXVKSixjQXJKWSxjQTJKQSxDQUdYLENBQ0QsY0E3TVEsY0E4TWdDLENBbkw1QixvQ0FrTFosY0FoTG9CLHFDQStCNEIsQ0FtSi9DLENBcExXLDBDQWtMWixjQWhMb0IsZ0NBK0I0QixDQW1KL0MsQ0FwTFcsMENBa0xaLGNBaExvQixzQ0ErQjRCLENBbUovQyxDQXBMVywwQ0FrTFosY0FoTG9CLHNDQStCNEIsQ0FtSi9DLENBcExXLDBDQWtMWixjQWhMb0Isc0NBK0I0QixDQW1KL0MsQ0FwTFcsMENBa0xaLGNBaExvQixnQ0ErQjRCLENBbUovQyxDQXBMVywwQ0FrTFosY0FoTG9CLHNDQStCNEIsQ0FtSi9DLENBbktHLG9DQWlLSixjQS9KWSxjQWdLeUMsQ0FDcEQsQ0M1VUQsT0FDSSxrQkNHVyxDREpmLHdGQUdRLFVDSXNCLENEQTlCLE1BQ0ksa0JDRmUsQ0RLbkIsSUFDSSwrQkNSVyxDRFNYLFdBQ0ksNEJDUHNCLENEVzlCLE9BQ0ksV0FBWSxDRU5oQixRQUNJLFdEV1EsQ0NaWixlQUlRLGdCQUF1QixDQUN2QixrQkRPSSxDQ1FaLHdDQUNJLG9CQUFhLENBQWIsWUFBYSxDQUNiLDBCQUFtQixDQUFuQixrQkFBbUIsQ0FLdkIsUUFJUSxzQkFBMEIsQ0FBMUIsY0FBMEIsQ0FDMUIsYUFBb0IsQ0FLNUIsUUFHUSw0QkFBMEIsQ0FBMUIsb0JBQTBCLENBQzFCLGFBQW9CLENBSzVCLGlCQUVJLFVBQVcsQ0FGZix5QkFJUSxzQkFBMEIsQ0FBMUIsY0FBMEIsQ0FDMUIsYUFBb0IsQ0h0RHhCLDBDR2lESix5QkFPWSxzQkFBMEIsQ0FBMUIsY0FBMEIsQ0FFakMsQ0FJTCxJQUVJLHFDQUE4QixDQUE5Qiw2QkFBOEIsQ0FGbEMsUUFJUSw0QkFBMEIsQ0FBMUIsb0JBQTBCLENBQzFCLGFBQW9CLENBSzVCLE1BQ0ksY0FBZSxDQUNmLFFEM0RRLENDNERSLFVBQVcsQ0FDWCxXQUFZLENBQ1osWUFBYSxDQUNiLG1CQUFvQixDQUNwQixTQUFVLENBQ1YsdUJBQXdCLENBUjVCLGFBVVEsU0FBVSxDQVZsQixtQ0FjWSxtQ0FBNEIsQ0FBNUIsMkJBQTRCLENBZHhDLG1CQWtCZ0IsYUFBYyxDQUNkLFVBQVcsQ0FDWCxZQUFhLENBQ2IsMkJBQTRCLENDckc1QyxFQUNJLFFBQVMsQ0FDVCxTQUFVLENBQ1YsUUFBUyxDQUNULGNBQWUsQ0FDZixZQUFhLENBQ2IsdUJBQXdCLENBQ3hCLHFCQUFzQixDQUN0QixvQkFBcUIsQ0FDckIsYUZQVyxDRVNmLDhFQVdJLGFBQWMsQ0FFbEIsS0FDSSxhQUFjLENBQ2Qsa0NBQW1DLENBRXZDLE1BRUksZUFBZ0IsQ0FFcEIsYUFFSSxXQUFZLENBRmhCLG9EQUtRLFVBQVcsQ0FDWCxZQUFhLENBSXJCLE1BQ0ksd0JBQXlCLENBQ3pCLGdCQUFpQixDQUdyQixNQUNJLGdCQUFpQixDQUdyQixFQUNJLGFGbERXLENFcURmLElBQ0ksY0FBZSxDQUNmLFdBQVksQ0FDWixTQUFVLENBQ1YsMkJBQTZCLENBRWpDLGNBQ0ksU0FBVSxDQUVkLHFCQUNJLFNBQVUsQ0FNZCxZQUNJLGtCQUFrQyxDQ3hFdEMsV0FDSSxtQkhlZSxDR2RmLDBEQUEyRCxDQUMzRCxlQUFnQixDQUNoQixpQkFBa0IsQ0FPdEIsY0FDSSw2REhPaUUsQ0dOakUsZUFBZ0IsQ0FDaEIsZ0JBQWtCLENMNkdkLGNLMUc0QixDTDhHNUIsb0NLcEhSLGNMc0hnQixxQ0FzRGdDLENLaEsvQyxDTGdKRyxxQ0s1SkosY0w4SlksZUt4Sm9DLENBTS9DLENMZkcsMENLR0osY0FVUSxtQkFBb0IsQ0FFM0IsQ0FFRCx5QkFDSSw2REhQaUUsQ0dRakUsZUFBZ0IsQ0FDaEIsaUJBQWtCLENMK0ZkLGNLOUY0QixDTGtHNUIsb0NLdEdSLHlCTHdHZ0IscUNBc0RnQyxDS3pKL0MsQ0x5SUcscUNLOUlKLHlCTGdKWSxjSzVJbUMsQ0FDOUMsQ0FFRCxXQUNJLDZESGY4RCxDRnlHMUQsY0t4RjhCLENBQ2xDLGtCQUFtQixDQUNuQixlQUFnQixDTDBGWixvQ0svRlIsV0xpR2dCLHFDQXNEZ0MsQ0tqSi9DLENMaUlHLHFDS3ZJSixXTHlJWSxjS3RJcUMsQ0FHaEQsQ0FDRCxvQ0FDSSw2REh0QjhELENGeUcxRCxjS2pGOEIsQ0FDbEMsaUJBQWtCLENMb0ZkLG9DS3hGUixvQ0wwRmdCLHFDQXNEZ0MsQ0szSS9DLENMMkhHLHFDS2hJSixvQ0xrSVksY0svSHFDLENBRWhELENBQ0Qsa0NBQ0ksa0JBQW1CLENBQ25CLHdCQUF5QixDQVk3QixpQkFDSSxzQkFBdUIsQ0FDdkIsK0JIM0RXLENHeURmLDRDQUlRLGFIN0RPLENHeURmLHVDQUlRLGFIN0RPLENHeURmLHdDQUlRLGFIN0RPLENHeURmLDhCQUlRLGFIN0RPLENJTGYsS0FFSSxrQkpHVyxDSUZYLFVKSzBCLENJSjFCLHFCQUFzQixDQUN0Qix1QkFBeUIsQ0NMN0IsT0FDSSxlQUFpQixDQUNqQixhQUFjLENBRmxCLFVBSVEsb0JBQXFCLENBSTdCLFlBQ0ksVUFBVyxDQUdmLFFBQ0ksV0FBWSxDQ1paLGlCQUNJLGtCTkdPLENNSlYsdUNBSU8sVU5Ha0IsQ01QekIsbUJBT08sVU5Ba0IsQ01DbEIsNEJBQThCLENDVDFDLE9BQ0ksaUJBQWtCLENBQ2xCLFdBQVksQ0FDWixZQUFhLENBQ2IsZVBJMEIsQ09IMUIsZUFBZ0IsQ1RnQmhCLDBDU3JCSixPQU9RLFdBQVksQ0FlbkIsQ0FiRyxhQUNJLGlCQUFrQixDQUNsQixVQUFXLENBQ1gsVUFBaUIsQ0FDakIsU0FBVSxDQUNWLGdCQUF1QixDVE8zQiwwQ1NaQSxhQVVRLFVBQVcsQ0FFbEIsQ0NuQkwsTUFDSSxjQUFlLENBQ2YsU0FBVSxDQUNWLFNScUJRLENRcEJSLG9CQUFhLENBQWIsWUFBYSxDQUdiLGFBR0kscUJBQXNCLENBQ3RCLGNSYUksQ1FqQlAsNEJBQ0csaUJBQWtCLENBQ2xCLG9CQVFrQyxDQVZyQyxlQVFPLFVBQVcsQ0FDWCxXQUFZLENBQ1oscUNBQThCLENBQTlCLDZCQUE4QixDQVZyQyxrQkFjTyxpQkFBa0IsQ0FDbEIsU0FBVSxDQUNWLFVBQVcsQ0FDWCxrQlJyQkcsQ1FzQkgsT0FBUSxDQUNSLFFBQVMsQ0FDVCx1QkFBeUIsQ0FwQmhDLCtCQXVCTyxPQUFRLENBdkJmLDZCQTBCTyxPQUFRLENBMUJmLDBCQStCZSxVQUFXLENBQ1gsdUNBQWdDLENBQWhDLCtCQUFnQyxDQWhDL0MsdUNBbUNlLFVBQVcsQ0FDWCw0QkFBc0IsQ0FBdEIsb0JBQXNCLENBcENyQyxxQ0F1Q2UsVUFBVyxDQUNYLHVDQUFnQyxDQUFoQywrQkFBZ0MsQ0FPaEQsYUFHSSxjUmpDSSxDUThCUCw0QkFDRyxpQkFBa0IsQ0FDbEIsb0JBUXdCLENBVjNCLGVBT08sVUFBVyxDQUNYLFdBQVksQ0FDWiw4REFBMkUsQ0FDM0UsbUJBQW9CLENBSzVCLFdBQ0ksY0FBZSxDQUNmLEtBQU0sQ0FDTixPQUFVLENBQ1YsU0FBVSxDQUNWLGNBQWUsQ0FHZiw2QkFBMEIsQ0FDMUIsZVJ4RXNCLENReUV0QixtQ0FBNEMsQ0FDNUMsaUNBQTBCLENBQTFCLHlCQUEwQixDQUMxQixTQUFVLENBQ1YsbUJBQW9CLENBRXBCLHVCQUF5QixDQWY1QixrQkFpQk8sK0JBQXlCLENBQXpCLHVCQUF5QixDQUN6QixTQUFVLENBQ1YsbUJBQW9CLENBbkIzQixjQXNCTyxrQkFBbUIsQ0F0QjFCLGNBeUJPLG1CQUFvQixDQUV4QixpQkFDSSxpQkFBa0IsQ0FDbEIsYUFBYyxDQUNkLFVBQVcsQ0FDWCxXQUFZLENBQ1osU0FBa0IsQ0FMckIsK0NBUU8sVUFBVyxDQUNYLGFBQWMsQ0FDZCxpQkFBa0IsQ0FDbEIsUUFBUyxDQUNULE9BQVEsQ0FDUixvREFBOEMsQ0FBOUMsNENBQThDLENBQzlDLFNBQVUsQ0FDVixVQUFXLENBQ1gsa0JSN0dELENROEdDLHVCQUF5QixDQWpCaEMsd0JBb0JPLHFEQUErQyxDQUEvQyw2Q0FBK0MsQ0FwQnRELDZCQXdCVyxvREFBOEMsQ0FBOUMsNENBQThDLENBeEJ6RCw4QkEyQlcsU0FBVSxDQUl0QixnQkFDSSxpQkFBa0IsQ0FFbEIsa0JBQW1CLENBQ25CLFVBQVcsQ0FDWCxNQUFPLENBQ1AsUUFBUyxDQUNULDRCQUEyQixDQUtuQyxjQUNJLGNBQWUsQ0FDZixPQUFVLENBQ1YsV0FBWSxDQUNaLFVBQVcsQ0FDWCxTQUFVLENBQ1Ysa0JSN0lVLENROElWLGVBQThCLENBQzlCLDhDQUF1QyxDQUF2QyxzQ0FBdUMsQ0NwSi9DLEtBRUksYVR1QlEsQ1N0QlIsaUJBQWtCLENBQ2xCLFVBQVcsQ0FDWCxTQUFVLENYNEhOLG9DV2pJUixLWG1JZ0IseUNBc0RnQyxDQXREaEMsMENBc0RnQyxDV3BLL0MsQ1hvSkcscUNXektKLEtYMktZLGlCR3hLdUQsQ0h3S3ZELGtCR3hLdUQsQ1FrQmxFLENYSUcsMENXekJKLEtST1EscUNBQXdDLENBQ3hDLHNDQUF5QyxDUWFoRCxDQVJHLG1CQUNJLGNBQU8sQ0FBUCxNQUFPLENBQ1AsZUFBMEIsQ0FGN0IsWUFJTyxpQkFBd0IsQ0FDeEIsb0JBQXFCLENDbkJqQyxPQUVJLFVBQVcsQ0FDWCxPQUFRLENBQ1IsV0FBWSxDQUpoQixpQkFDSSxpQkFVNkIsQ0FYakMsVUFRUSxPQUFRLENBQ1IsUUFBUyxDQUNULHNDQUFnQyxDQUFoQyw4QkFBZ0MsQ0FDaEMsdUJBQXlCLENBWGpDLGdCQWFZLFNBQVUsQ0FidEIsb0JBaUJZLHNDQUFnQyxDQUFoQyw4QkFBZ0MsQ0FqQjVDLG9CQXNCWSxzQ0FBZ0MsQ0FBaEMsOEJBQWdDLENBdEI1QyxzQkEyQlksc0NBQWdDLENBQWhDLDhCQUFnQyIsImZpbGUiOiJhcHAuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQG1peGluIHhzIHtcbiAgICBAbWVkaWEgKG1heC13aWR0aDogJHhzKSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgIH1cbn1cbkBtaXhpbiBzbSB7XG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkc20pIHtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgfVxufVxuQG1peGluIG1kIHtcbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRtZCkge1xuICAgICAgICBAY29udGVudDtcbiAgICB9XG59XG5AbWl4aW4gbGcge1xuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJGxnKSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgIH1cbn1cbkBtaXhpbiB4bCB7XG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkeGwpIHtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgfVxufVxuQG1peGluIHN1cGVyIHtcbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRzdXBlcikge1xuICAgICAgICBAY29udGVudDtcbiAgICB9XG59XG5cbkBtaXhpbiBmcm9tKCRmcm9tLCAkdG8pIHtcbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRmcm9tKSBhbmQgKG1heC13aWR0aDogJHRvKSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgIH1cbn1cblxuQG1peGluIG9ubHkoJHNpemUpIHtcbiAgICBAaWYgJHNpemUgPT0gJHBob25lIHtcbiAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAkcGhvbmUpIHtcbiAgICAgICAgICAgIEBjb250ZW50O1xuICAgICAgICB9XG4gICAgfSBAZWxzZSBpZiAkc2l6ZSA9PSAkdGFibGV0IHtcbiAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkcGhvbmUpIGFuZCAobWF4LXdpZHRoOiAkbGFwdG9wIC0gMXB4KSB7XG4gICAgICAgICAgICBAY29udGVudDtcbiAgICAgICAgfVxuICAgIH0gQGVsc2UgaWYgJHNpemUgPT0gJGxhcHRvcCB7XG4gICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJGxhcHRvcCkgYW5kIChtYXgtd2lkdGg6ICRkZXNrdG9wIC0gMXB4KSB7XG4gICAgICAgICAgICBAY29udGVudDtcbiAgICAgICAgfVxuICAgIH0gQGVsc2UgaWYgJHNpemUgPT0gJGRlc2t0b3Age1xuICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRkZXNrdG9wKSBhbmQgKG1heC13aWR0aDogJHN1cGVyIC0gMXB4KSB7XG4gICAgICAgICAgICBAY29udGVudDtcbiAgICAgICAgfVxuICAgIH0gQGVsc2UgaWYgJHNpemUgPT0gJHN1cGVyIHtcbiAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkc3VwZXIpIHtcbiAgICAgICAgICAgIEBjb250ZW50O1xuICAgICAgICB9XG4gICAgfVxufVxuXG5AbWl4aW4gaXAoXG4gICAgJHByb3BlcnRpZXMsXG4gICAgJG1pbi1zY3JlZW4sXG4gICAgJG1pbi12YWx1ZSxcbiAgICAkbWF4LXNjcmVlbixcbiAgICAkbWF4LXZhbHVlLFxuICAgICRlYXNpbmc6IFwibGluZWFyXCIsXG4gICAgJGJlbmRpbmctcG9pbnRzOiAyXG4pIHtcbiAgICAvLyBEZWZhdWx0IEVhc2luZyAnTGluZWFyJ1xuICAgICRwMDogMDtcbiAgICAkcDE6IDA7XG4gICAgJHAyOiAxO1xuICAgICRwMzogMTtcblxuICAgIC8vIFBhcnNlIEN1YmljIEJlemllciBzdHJpbmdcbiAgICBAaWYgKHN0ci1zbGljZSgkZWFzaW5nLCAxLCAxMikgPT0gXCJjdWJpYy1iZXppZXJcIikge1xuICAgICAgICAvLyBHZXQgdGhlIHZhbHVlcyBiZXR3ZWVuIHRoZSBicmFja2V0c1xuICAgICAgICAvLyBUT0RPOiBEZWFsIHdpdGggZGlmZmVyZW50IHdoaXRlc3BhY2VcbiAgICAgICAgJGk6IHN0ci1pbmRleCgkZWFzaW5nLCBcIilcIik7IC8vIEdldCBpbmRleCBvZiBjbG9zaW5nIGJyYWNrZXRcbiAgICAgICAgJHZhbHVlczogc3RyLXNsaWNlKFxuICAgICAgICAgICAgJGVhc2luZyxcbiAgICAgICAgICAgIDE0LFxuICAgICAgICAgICAgJGkgLSAxXG4gICAgICAgICk7IC8vIEV4dHJhY3QgdmFsdWVzIGJldHdlZW4gYnJhY2t0c1xuICAgICAgICAkbGlzdDogZXhwbG9kZSgkdmFsdWVzLCBcIiwgXCIpOyAvLyBTcGxpdCB0aGUgdmFsdWVzIGludG8gYSBsaXN0XG5cbiAgICAgICAgLy8gQGRlYnVnKCRsaXN0KTtcblxuICAgICAgICAvLyBDYXN0IHZhbHVlcyB0byBudW1lYnJzXG4gICAgICAgICRwMDogbnVtYmVyKG50aCgkbGlzdCwgMSkpO1xuICAgICAgICAkcDE6IG51bWJlcihudGgoJGxpc3QsIDIpKTtcbiAgICAgICAgJHAyOiBudW1iZXIobnRoKCRsaXN0LCAzKSk7XG4gICAgICAgICRwMzogbnVtYmVyKG50aCgkbGlzdCwgNCkpO1xuICAgIH1cblxuICAgIEBpZiAoJGVhc2luZyA9PSBcImVhc2VcIikge1xuICAgICAgICAkcDA6IDAuMjU7XG4gICAgICAgICRwMTogMTtcbiAgICAgICAgJHAyOiAwLjI1O1xuICAgICAgICAkcDM6IDE7XG4gICAgfVxuXG4gICAgQGlmICgkZWFzaW5nID09IFwiZWFzZS1pbi1vdXRcIikge1xuICAgICAgICAkcDA6IDAuNDI7XG4gICAgICAgICRwMTogMDtcbiAgICAgICAgJHAyOiAwLjU4O1xuICAgICAgICAkcDM6IDE7XG4gICAgfVxuXG4gICAgQGlmICgkZWFzaW5nID09IFwiZWFzZS1pblwiKSB7XG4gICAgICAgICRwMDogMC40MjtcbiAgICAgICAgJHAxOiAwO1xuICAgICAgICAkcDI6IDE7XG4gICAgICAgICRwMzogMTtcbiAgICB9XG5cbiAgICBAaWYgKCRlYXNpbmcgPT0gXCJlYXNlLW91dFwiKSB7XG4gICAgICAgICRwMDogMDtcbiAgICAgICAgJHAxOiAwO1xuICAgICAgICAkcDI6IDAuNTg7XG4gICAgICAgICRwMzogMTtcbiAgICB9XG5cbiAgICBAZWFjaCAkcHJvcGVydHkgaW4gJHByb3BlcnRpZXMge1xuICAgICAgICAjeyRwcm9wZXJ0eX06ICRtaW4tdmFsdWU7XG4gICAgfVxuXG4gICAgQGlmICgkZWFzaW5nID09IFwibGluZWFyXCIgb3IgJGJlbmRpbmctcG9pbnRzIDwgMSkge1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkbWluLXNjcmVlbikge1xuICAgICAgICAgICAgQGVhY2ggJHByb3BlcnR5IGluICRwcm9wZXJ0aWVzIHtcbiAgICAgICAgICAgICAgICAjeyRwcm9wZXJ0eX06IGNhbGMtaW50ZXJwb2xhdGlvbihcbiAgICAgICAgICAgICAgICAgICAgJG1pbi1zY3JlZW4sXG4gICAgICAgICAgICAgICAgICAgICRtaW4tdmFsdWUsXG4gICAgICAgICAgICAgICAgICAgICRtYXgtc2NyZWVuLFxuICAgICAgICAgICAgICAgICAgICAkbWF4LXZhbHVlXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0gQGVsc2Uge1xuICAgICAgICAvLyBMb29wIHRocm91Z2ggYmVuZGluZyBwb2ludHNcbiAgICAgICAgJHQ6IDEgLyAoJGJlbmRpbmctcG9pbnRzICsgMSk7XG4gICAgICAgICRpOiAxO1xuICAgICAgICAkcHJldi1zY3JlZW46ICRtaW4tc2NyZWVuO1xuICAgICAgICAkcHJldi12YWx1ZTogJG1pbi12YWx1ZTtcblxuICAgICAgICBAd2hpbGUgJHQgKiAkaSA8PSAxIHtcbiAgICAgICAgICAgICRiZW5kaW5nLXBvaW50OiAkdCAqICRpO1xuICAgICAgICAgICAgJHZhbHVlOiBjdWJpYy1iZXppZXIoJHAwLCAkcDEsICRwMiwgJHAzLCAkYmVuZGluZy1wb2ludCk7XG4gICAgICAgICAgICAkc2NyZWVuLWludDogbGVycCgkbWluLXNjcmVlbiwgJG1heC1zY3JlZW4sICRiZW5kaW5nLXBvaW50KTtcbiAgICAgICAgICAgICR2YWx1ZS1pbnQ6IGxlcnAoJG1pbi12YWx1ZSwgJG1heC12YWx1ZSwgJHZhbHVlKTtcblxuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJHByZXYtc2NyZWVuKSB7XG4gICAgICAgICAgICAgICAgQGVhY2ggJHByb3BlcnR5IGluICRwcm9wZXJ0aWVzIHtcbiAgICAgICAgICAgICAgICAgICAgI3skcHJvcGVydHl9OiBjYWxjLWludGVycG9sYXRpb24oXG4gICAgICAgICAgICAgICAgICAgICAgICAkcHJldi1zY3JlZW4sXG4gICAgICAgICAgICAgICAgICAgICAgICAkcHJldi12YWx1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICRzY3JlZW4taW50LFxuICAgICAgICAgICAgICAgICAgICAgICAgJHZhbHVlLWludFxuICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJHByZXYtc2NyZWVuOiAkc2NyZWVuLWludDtcbiAgICAgICAgICAgICRwcmV2LXZhbHVlOiAkdmFsdWUtaW50O1xuICAgICAgICAgICAgJGk6ICRpICsgMTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRtYXgtc2NyZWVuKSB7XG4gICAgICAgIEBlYWNoICRwcm9wZXJ0eSBpbiAkcHJvcGVydGllcyB7XG4gICAgICAgICAgICAjeyRwcm9wZXJ0eX06ICRtYXgtdmFsdWU7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbkBmdW5jdGlvbiBjYWxjLWludGVycG9sYXRpb24oJG1pbi1zY3JlZW4sICRtaW4tdmFsdWUsICRtYXgtc2NyZWVuLCAkbWF4LXZhbHVlKSB7XG4gICAgJGE6ICgkbWF4LXZhbHVlIC0gJG1pbi12YWx1ZSkgLyAoJG1heC1zY3JlZW4gLSAkbWluLXNjcmVlbik7XG4gICAgJGI6ICRtaW4tdmFsdWUgLSAkYSAqICRtaW4tc2NyZWVuO1xuXG4gICAgJHNpZ246IFwiK1wiO1xuICAgIEBpZiAoJGIgPCAwKSB7XG4gICAgICAgICRzaWduOiBcIi1cIjtcbiAgICAgICAgJGI6IGFicygkYik7XG4gICAgfVxuICAgIEByZXR1cm4gY2FsYygjeyRhICogMTAwfXZ3ICN7JHNpZ259ICN7JGJ9KTtcbn1cblxuQGZ1bmN0aW9uIHNvbHZlLWJleGllci14KCRwMXgsICRwMXksICRwMngsICRwMnksICR4KSB7XG4gICAgJGN4OiAzICogJHAxeDtcbiAgICAkYng6IDMgKiAoJHAyeCAtICRwMXgpIC0gJGN4O1xuICAgICRheDogMSAtICRjeCAtJGJ4O1xuXG4gICAgJHQwOiAwO1xuICAgICR0MTogMTtcbiAgICAkdDI6ICR4O1xuICAgICR4MjogMDtcbiAgICAkcmVzOiAxMDAwO1xuXG4gICAgQHdoaWxlICgkdDAgPCAkdDEgb3IgJGJyZWFrKSB7XG4gICAgICAgICR4MjogKCgkYXggKiAkdDIgKyAkYngpICogJHQyICsgJGN4KSAqICR0MjtcbiAgICAgICAgQGlmIChhYnMoJHgyIC0gJHgpIDwgJHJlcykge1xuICAgICAgICAgICAgQHJldHVybiAkdDI7XG4gICAgICAgIH1cbiAgICAgICAgQGlmICgkeCA+ICR4Mikge1xuICAgICAgICAgICAgJHQwOiAkdDI7XG4gICAgICAgIH0gQGVsc2Uge1xuICAgICAgICAgICAgJHQxOiAkdDI7XG4gICAgICAgIH1cbiAgICAgICAgJHQyOiAoJHQxIC0gJHQwKSAqIDAuNSArICR0MDtcbiAgICB9XG5cbiAgICBAcmV0dXJuICR0Mjtcbn1cblxuQGZ1bmN0aW9uIGN1YmljLWJlemllcigkcDF4LCAkcDF5LCAkcDJ4LCAkcDJ5LCAkeCkge1xuICAgICRjeTogMyAqICRwMXk7XG4gICAgJGJ5OiAzICogKCRwMnkgLSAkcDF5KSAtICRjeTtcbiAgICAkYXk6IDEgLSAkY3kgLSAkYnk7XG4gICAgJHQ6IHNvbHZlLWJleGllci14KCRwMXgsICRwMXksICRwMngsICRwMnksICR4KTtcbiAgICBAcmV0dXJuICgoJGF5ICogJHQgKyAkYnkpICogJHQgKyAkY3kpICogJHQ7XG59XG5cbkBmdW5jdGlvbiBsZXJwKCRhLCAkYiwgJHQpIHtcbiAgICBAcmV0dXJuICRhICsgKCRiIC0gJGEpICogJHQ7XG59XG5cbkBmdW5jdGlvbiBudW1iZXIoJHZhbHVlKSB7XG4gICAgQGlmIHR5cGUtb2YoJHZhbHVlKSA9PSBcIm51bWJlclwiIHtcbiAgICAgICAgQHJldHVybiAkdmFsdWU7XG4gICAgfSBAZWxzZSBpZiB0eXBlLW9mKCR2YWx1ZSkgIT0gXCJzdHJpbmdcIiB7XG4gICAgICAgICRfOiBsb2coXCJWYWx1ZSBmb3IgYHRvLW51bWJlcmAgc2hvdWxkIGJlIGEgbnVtYmVyIG9yIGEgc3RyaW5nLlwiKTtcbiAgICB9XG5cbiAgICAkcmVzdWx0OiAwO1xuICAgICRkaWdpdHM6IDA7XG4gICAgJG1pbnVzOiBzdHItc2xpY2UoJHZhbHVlLCAxLCAxKSA9PSBcIi1cIjtcbiAgICAkbnVtYmVyczogKFxuICAgICAgICBcIjBcIjogMCxcbiAgICAgICAgXCIxXCI6IDEsXG4gICAgICAgIFwiMlwiOiAyLFxuICAgICAgICBcIjNcIjogMyxcbiAgICAgICAgXCI0XCI6IDQsXG4gICAgICAgIFwiNVwiOiA1LFxuICAgICAgICBcIjZcIjogNixcbiAgICAgICAgXCI3XCI6IDcsXG4gICAgICAgIFwiOFwiOiA4LFxuICAgICAgICBcIjlcIjogOVxuICAgICk7XG5cbiAgICBAZm9yICRpIGZyb20gaWYoJG1pbnVzLCAyLCAxKSB0aHJvdWdoIHN0ci1sZW5ndGgoJHZhbHVlKSB7XG4gICAgICAgICRjaGFyYWN0ZXI6IHN0ci1zbGljZSgkdmFsdWUsICRpLCAkaSk7XG5cbiAgICAgICAgQGlmIG5vdChpbmRleChtYXAta2V5cygkbnVtYmVycyksICRjaGFyYWN0ZXIpIG9yICRjaGFyYWN0ZXIgPT0gXCIuXCIpIHtcbiAgICAgICAgICAgIEByZXR1cm4gdG8tbGVuZ3RoKFxuICAgICAgICAgICAgICAgIGlmKCRtaW51cywgLSRyZXN1bHQsICRyZXN1bHQpLFxuICAgICAgICAgICAgICAgIHN0ci1zbGljZSgkdmFsdWUsICRpKVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuXG4gICAgICAgIEBpZiAkY2hhcmFjdGVyID09IFwiLlwiIHtcbiAgICAgICAgICAgICRkaWdpdHM6IDE7XG4gICAgICAgIH0gQGVsc2UgaWYgJGRpZ2l0cyA9PSAwIHtcbiAgICAgICAgICAgICRyZXN1bHQ6ICRyZXN1bHQgKiAxMCArIG1hcC1nZXQoJG51bWJlcnMsICRjaGFyYWN0ZXIpO1xuICAgICAgICB9IEBlbHNlIHtcbiAgICAgICAgICAgICRkaWdpdHM6ICRkaWdpdHMgKiAxMDtcbiAgICAgICAgICAgICRyZXN1bHQ6ICRyZXN1bHQgKyBtYXAtZ2V0KCRudW1iZXJzLCAkY2hhcmFjdGVyKSAvICRkaWdpdHM7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBAcmV0dXJuIGlmKCRtaW51cywgLSRyZXN1bHQsICRyZXN1bHQpO1xufVxuXG5AZnVuY3Rpb24gZXhwbG9kZSgkc3RyaW5nLCAkZGVsaW1pdGVyKSB7XG4gICAgJHJlc3VsdDogKCk7XG4gICAgQGlmICRkZWxpbWl0ZXIgPT0gXCJcIiB7XG4gICAgICAgIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggc3RyLWxlbmd0aCgkc3RyaW5nKSB7XG4gICAgICAgICAgICAkcmVzdWx0OiBhcHBlbmQoJHJlc3VsdCwgc3RyLXNsaWNlKCRzdHJpbmcsICRpLCAkaSkpO1xuICAgICAgICB9XG4gICAgICAgIEByZXR1cm4gJHJlc3VsdDtcbiAgICB9XG4gICAgJGV4cGxvZGluZzogdHJ1ZTtcbiAgICBAd2hpbGUgJGV4cGxvZGluZyB7XG4gICAgICAgICRkLWluZGV4OiBzdHItaW5kZXgoJHN0cmluZywgJGRlbGltaXRlcik7XG4gICAgICAgIEBpZiAkZC1pbmRleCB7XG4gICAgICAgICAgICBAaWYgJGQtaW5kZXggPiAxIHtcbiAgICAgICAgICAgICAgICAkcmVzdWx0OiBhcHBlbmQoJHJlc3VsdCwgc3RyLXNsaWNlKCRzdHJpbmcsIDEsICRkLWluZGV4IC0gMSkpO1xuICAgICAgICAgICAgICAgICRzdHJpbmc6IHN0ci1zbGljZSgkc3RyaW5nLCAkZC1pbmRleCArIHN0ci1sZW5ndGgoJGRlbGltaXRlcikpO1xuICAgICAgICAgICAgfSBAZWxzZSBpZiAkZC1pbmRleCA9PSAxIHtcbiAgICAgICAgICAgICAgICAkc3RyaW5nOiBzdHItc2xpY2UoXG4gICAgICAgICAgICAgICAgICAgICRzdHJpbmcsXG4gICAgICAgICAgICAgICAgICAgIDEsXG4gICAgICAgICAgICAgICAgICAgICRkLWluZGV4ICsgc3RyLWxlbmd0aCgkZGVsaW1pdGVyKVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9IEBlbHNlIHtcbiAgICAgICAgICAgICAgICAkcmVzdWx0OiBhcHBlbmQoJHJlc3VsdCwgJHN0cmluZyk7XG4gICAgICAgICAgICAgICAgJGV4cGxvZGluZzogZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gQGVsc2Uge1xuICAgICAgICAgICAgJHJlc3VsdDogYXBwZW5kKCRyZXN1bHQsICRzdHJpbmcpO1xuICAgICAgICAgICAgJGV4cGxvZGluZzogZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgQHJldHVybiAkcmVzdWx0O1xufVxuXG5cblxuLy8gRXhhbXBsZXMgb2YgZGlmZmVyZW50IGludGVycG9sYXRpb24gdHlwZXNcbi8vIFJlZmVyZW5jZXNcbi8vIGh0dHBzOi8vY29kZXBlbi5pby9NYWRlQnlNaWtlL3Blbi92TnJ2ZFpcbi8vIHdpbGwgYWRkIG1vcmUgd2hlbiBJIGZpbmQgdGhlbeKAplxuXG5cbi5jbGFzc2ljLWxpbmVhciB7XG4gICAgQGluY2x1ZGUgaXAoXCJmb250LXNpemVcIiwgNjAwcHgsIDEycHgsIDkwMHB4LCAyNHB4KTtcbn1cbi5lYXN5LXBlYXN5IHtcbiAgICBAaW5jbHVkZSBpcChcImZvbnQtc2l6ZVwiLCA2MDBweCwgMTJweCwgOTAwcHgsIDI0cHgsIFwiZWFzZS1pblwiKTtcbn1cbi5jdWJpYy1iZXppZXIge1xuICAgIEBpbmNsdWRlIGlwKFxuICAgICAgICBcImZvbnQtc2l6ZVwiLFxuICAgICAgICA2MDBweCxcbiAgICAgICAgMTJweCxcbiAgICAgICAgOTAwcHgsXG4gICAgICAgIDI0cHgsXG4gICAgICAgIFwiY3ViaWMtYmV6aWVyKDAuNzU1LCAwLjA1LCAwLjg1NSwgMC4wNilcIlxuICAgICk7XG59XG4uYmxvYXQtbXktY3NzIHtcbiAgICBAaW5jbHVkZSBpcChcImZvbnQtc2l6ZVwiLCA2MDBweCwgMTJweCwgOTAwcHgsIDI0cHgsIFwiZWFzZS1pbi1lYXNlLW91dFwiLCA2KTtcbn1cbiIsIlxuLmJsYWNrIHtcbiAgICBiYWNrZ3JvdW5kOiAkYmxhY2s7XG4gICAgcCwgYSwgbGksIGgxLCBoMiwgaDMsIGg0LCBoNSwgaDYge1xuICAgICAgICBjb2xvcjogJHdoaXRlO1xuICAgIH0gICBcbn1cblxuLmdyZXkge1xuICAgIGJhY2tncm91bmQ6ICRsaWdodGdyZXk7XG59XG5cbi51bCB7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRibGFjaztcbiAgICAuYmxhY2sgJiB7XG4gICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkd2hpdGU7XG4gICAgfVxufVxuXG4ucmlnaHQge1xuICAgIGZsb2F0OiByaWdodDtcbn0iLCIvLyBWYXJpYWJsZXNcblxuLy8gQ29sb3Vyc1xuJHByaW1hcnk6IHJnYmEoMjU1LCA4MiwgNzEsIDEpOyAvLyBPcmFuZ2UgLyBSZWRcbiRzZWNvbmRhcnk6IHJnYmEoNDgsIDI0MCwgMTk0LCAxKTsgLy8gR3JlZW5cbiRibGFjazogIzFhMWExYTsgLy8gTmF2eSBkYXJrXG4kZGFya2dyZXk6ICNjNGM0YzQ7XG4kbGlnaHRncmV5OiAjZjNmM2YzO1xuJHdoaXRlOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDEpOyAvLyB3aGl0ZVxuXG4vLyBNZWRpYSBRdWVyeSBCcmVha3BvaW50c1xuJHhzOiA0ODBweDtcbiRzbTogNzY4cHg7XG4kbWQ6IDEwMjRweDtcbiRsZzogMTQ0MHB4O1xuJHhsOiAxNjAwcHg7XG4kc3VwZXI6IDIwMDBweDtcblxuLy8gRm9udHNcbiRjdXN0b20xOiBcIkRlY2thcmRcIjtcblxuJHRleHQ6ICN7JGN1c3RvbTF9LCBcIkhlbHZldGljYSBOZXVlXCIsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7XG4kZGlzcGxheTogI3skY3VzdG9tMX0sIFwiSGVsdmV0aWNhIE5ldWVcIiwgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcblxuLy8gU3BhY2luZ1xuXG4kZ3V0dGVyOiA0dnc7XG5cblxuLy8gQW5pbWF0aW9uIC8gSW50ZXJwb2xhdGlvblxuLy8gJGVhc2U6IGN1YmljLWJlemllcigwLjY0LCAwLjA0LCAwLjM1LCAxKTtcbi8vICR0cmFuczogYWxsICN7JGVhc2V9IDAuM3M7IiwiLy8gR3JpZFxuLy8gbWFpbiBwYWdlIHdyYXAg4oCTIGRldGVybWluZXMgYnkgcGFkZGluZyBvbiB0aGUgbWFpbiB3cmFwIGRpdi5cbkBtaXhpbiB3cmFwIHtcbiAgICAvLyBibGVuZCBmcm9tIDE1cHggd2lkZSBvbiBtb2JpbGUgdG8gNTBweCB3aWRlIG9uIGxhcmdlIGRlc2t0b3BcbiAgICBAaW5jbHVkZSBpcCgocGFkZGluZy1sZWZ0LCBwYWRkaW5nLXJpZ2h0KSwgJHNtLCAxNXB4LCAkeGwsIDUwcHgpO1xuICAgIFxuICAgIC8vIGFueXRoaW5nIHN1cGVyIGxhcmdlIGN1dCBpdCBvZmYgYXQgMTYwMCB3aWRlIHRvIHN0b3AgdGhlIG1hZG5lc3NcbiAgICBAaW5jbHVkZSBzdXBlciB7XG4gICAgICAgIHBhZGRpbmctbGVmdDogY2FsYygoMTAwdncgLSAxNjAwcHgpIC8gMik7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IGNhbGMoKDEwMHZ3IC0gMTYwMHB4KSAvIDIpO1xuICAgIH1cbn1cblxuLy8gZGVmYXVsdCBzcGFjaW5nIGFuZCB0eXBlIHN0eWxlcyBmb3IgYSBzZWN0aW9uIGVsZW1lbnRcbnNlY3Rpb24ge1xuICAgIHBhZGRpbmc6ICRndXR0ZXI7XG4gICAgLy8gaGVhZGVycyB3aXRoaW4gc2VjdGlvbnNcbiAgICBoZWFkZXIge1xuICAgICAgICBwYWRkaW5nLWxlZnQ6ICRndXR0ZXIvMjtcbiAgICAgICAgcGFkZGluZy1ib3R0b206ICRndXR0ZXI7XG4gICAgICAgIC8vIGFsbCBoNOKAmXMgdGhhdCBhcmUgZGlyZWN0IGNoaWxkcmVuIG9mIHRoZSBoZWFkZXJcbiAgICAgICAgJiA+IGg0IHtcbiAgICAgICAgICAgIEBleHRlbmQgLnNtYWxsY2FwcztcbiAgICAgICAgfVxuICAgIH1cbiAgICBAaW5jbHVkZSB4bCB7XG4gICAgICAgIC8vIHBhZGRpbmc6ICRndXR0ZXIgJGd1dHRlcioyO1xuICAgICAgICAmID4gaGVhZGVyIHtcbiAgICAgICAgICAgIC8vIHBhZGRpbmctbGVmdDogJGd1dHRlcjtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLy8gZmxleCBzbyBJ4oCZbSBub3QgcmVwZWF0aW5nIG15c2VsZiBiZWxvd1xuLmZsZXgge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1mbG93OiByb3cgd3JhcDtcbn1cblxuXG4vLyB0d28gY29sdW1uc1xuLmMyIHtcbiAgICBAZXh0ZW5kIC5mbGV4O1xuICAgIC8vIGRpdnMgdGhhdCBhcmUgZGlyZWN0IGNoaWxkcmVuIG9mIC5jMiAoc2FtZSBmb3IgZWFjaClcbiAgICAmID4gZGl2IHtcbiAgICAgICAgZmxleC1iYXNpczogY2FsYygxMDAlIC8gMik7XG4gICAgICAgIHBhZGRpbmc6IDAgJGd1dHRlci8yO1xuICAgIH1cbn1cblxuLy8gdGhyZWUgY29sdW1uc1xuLmMzIHtcbiAgICBAZXh0ZW5kIC5mbGV4O1xuICAgICYgPiBkaXYge1xuICAgICAgICBmbGV4LWJhc2lzOiBjYWxjKDEwMCUgLyAzKTtcbiAgICAgICAgcGFkZGluZzogMCAkZ3V0dGVyLzI7XG4gICAgfVxufVxuXG4vLyBmb3VyIGNvbHVtbnNcbi5jNCB7XG4gICAgQGV4dGVuZCAuZmxleDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICAmID4gZGl2IHtcbiAgICAgICAgZmxleC1iYXNpczogY2FsYygxMDAlIC8gMik7XG4gICAgICAgIHBhZGRpbmc6IDAgJGd1dHRlci8yO1xuICAgICAgICBAaW5jbHVkZSBtZCB7XG4gICAgICAgICAgICBmbGV4LWJhc2lzOiBjYWxjKDEwMCUgLyA0KTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLy8gc2l4IGNvbHVtbnNcbi5jNiB7XG4gICAgQGV4dGVuZCAuZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgJiA+IGRpdiB7XG4gICAgICAgIGZsZXgtYmFzaXM6IGNhbGMoMTAwJSAvIDYpO1xuICAgICAgICBwYWRkaW5nOiAwICRndXR0ZXIvMjtcbiAgICB9XG59XG5cbi8vIEdyaWQgVXRpbGl0eSDigJMgUHJlc3MgJ0cnIHRvIHNlZSBpdFxuLmdyaWQge1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB0b3A6IC0kZ3V0dGVyO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICB6LWluZGV4OiA5OTk5O1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdHJhbnNpdGlvbjogYWxsIGVhc2UgLjNzO1xuICAgICYuYWN0aXZlIHtcbiAgICAgICAgb3BhY2l0eTogMTtcbiAgICB9XG4gICAgJiA+IGRpdiB7XG4gICAgICAgICYuYzQge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMDAlKTtcbiAgICAgICAgfVxuICAgICAgICAmID4gZGl2IHtcbiAgICAgICAgICAgIHNwYW4ge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgIGhlaWdodDogMTAwdmg7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgyNTUsMCwwLC4xKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn0iLCIvLyBTdGFuZGFyZCBIVE1MNSByZXNldFxuLy8gSeKAmXZlIGFkZGVkIHNlbGVjdGlvbiB0ZXh0IGNvbG91ciB0byB0aGlzIGZvciBzb21lIHJlYXNvbi5cblxuKiB7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgYm9yZGVyOiAwO1xuICAgIGZvbnQtc2l6ZTogMTAwJTtcbiAgICBmb250OiBpbmhlcml0O1xuICAgIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBjb2xvcjogJGJsYWNrO1xufVxuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5oZ3JvdXAsXG5tZW51LFxubmF2LFxuc2VjdGlvbiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG59XG5ib2R5IHtcbiAgICBsaW5lLWhlaWdodDogMTtcbiAgICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbn1cbm9sLFxudWwge1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5ibG9ja3F1b3RlLFxucSB7XG4gICAgcXVvdGVzOiBub25lO1xuICAgICY6YmVmb3JlLFxuICAgICY6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICBjb250ZW50OiBub25lO1xuICAgIH1cbn1cblxudGFibGUge1xuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gICAgYm9yZGVyLXNwYWNpbmc6IDA7XG59XG5cbi5hamF4IHtcbiAgICBtaW4taGVpZ2h0OiAxMDB2aDtcbn1cblxuYSB7XG4gICAgY29sb3I6ICRibGFjaztcbn1cblxuaW1nIHtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIG9wYWNpdHk6IDE7XG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSBlYXNlIDAuM3M7XG59XG5pbWdbZGF0YS1zcmNdIHtcbiAgICBvcGFjaXR5OiAwO1xufVxuaW1nW2RhdGEtc3JjXS5sb2FkZWQge1xuICAgIG9wYWNpdHk6IDE7XG59XG5cbjo6LW1vei1zZWxlY3Rpb24ge1xuICAgIGJhY2tncm91bmQ6IGxpZ2h0ZW4oJHByaW1hcnksIDEwJSk7XG59XG46OnNlbGVjdGlvbiB7XG4gICAgYmFja2dyb3VuZDogbGlnaHRlbigkcHJpbWFyeSwgMTAlKTtcbn1cbiIsIi8vIDEwMCBBcmNoaXZlIHR5cGUgc3R5bGVzXG5cbi8vIFR5cGVmYWNlIOKAlCBEZWNrYXJkIGJ5IEJvYmJ5IFRhbm5hbVxuQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICRjdXN0b20xO1xuICAgIHNyYzogdXJsKC9hc3NldHMvZm9udHMvRGVja2FyZC1SZWd1bGFyLndvZmYpIGZvcm1hdChcIndvZmZcIik7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5cblxuLy8gUGFyYWdyYXBoIFN0eWxlc1xuXG4vLyBTdXBlciBEaXNwbGF5IChhcyB1c2VkIGluIHRoZSBzdHJpcHMpIOKAkyBiZWxvdyBzdHlsZXMgYXJlXG4uc3VwZXJkaXNwbGF5IHtcbiAgICBmb250LWZhbWlseTogJGRpc3BsYXk7XG4gICAgZm9udC13ZWlnaHQ6IDkwMDtcbiAgICBsaW5lLWhlaWdodDogMC45ZW07XG5cbiAgICAvLyBkZW5vdGVzIHJhbmdlIG9mIHNpemVzIOKAkyA2MCBvbiBtb2JpbGUgdG8gMTIwIG9uIGxhcmdlIGRlc2t0b3BcbiAgICBAaW5jbHVkZSBpcChmb250LXNpemUsICRzbSwgNjBweCwgJHhsLCAxMjBweCk7XG4gICAgXG4gICAgLy8gZnJvbSB0YWJsZXQgdXAgdGlnaHRlbiBpdCB1cFxuICAgIEBpbmNsdWRlIG1kIHtcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IC0ycHg7XG4gICAgfVxufVxuXG4uZGlzcGxheSB7XG4gICAgZm9udC1mYW1pbHk6ICRkaXNwbGF5O1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgbGluZS1oZWlnaHQ6IDEuMmVtO1xuICAgIEBpbmNsdWRlIGlwKGZvbnQtc2l6ZSwgJHNtLCAyOHB4LCAkeGwsIDMycHgpO1xufVxuXG4ubGFyZ2V0ZXh0IHtcbiAgICBmb250LWZhbWlseTogJHRleHQ7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIEBpbmNsdWRlIGlwKFwiZm9udC1zaXplXCIsICRzbSwgMThweCwgJHhsLCAyNHB4KTtcbiAgICBsaW5lLWhlaWdodDogMS4yNWVtO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG59XG4udGV4dCB7XG4gICAgZm9udC1mYW1pbHk6ICR0ZXh0O1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBAaW5jbHVkZSBpcChcImZvbnQtc2l6ZVwiLCAkc20sIDE2cHgsICR4bCwgMThweCk7XG4gICAgbGluZS1oZWlnaHQ6IDEuNGVtO1xufVxuLnNtYWxsY2FwcyB7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDFweDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuXG5cblxuLy8gRGVmYXVsdHNcbi8vIEJhc2UgRGVmYXVsdCBUeXBlXG4vLyBtYWtlcyBldmVyeXRoaW5nIGp1c3QgcGxhaW4gc21hbGwgdGV4dC4gU3R5bGUgdHlwZSBhY2NvcmRpbmdseSBhZnRlciB0aGlzLlxuaDEsaDIsaDMsaDQsaDUsaDYsYSxwLGxpLHNwYW4ge1xuICAgIEBleHRlbmQgLnRleHQ7XG59XG5cbmlucHV0W3R5cGU9XCJ0ZXh0XCJdIHtcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJGJsYWNrO1xuICAgICY6OnBsYWNlaG9sZGVyIHtcbiAgICAgICAgY29sb3I6ICRibGFjaztcbiAgICB9XG59IiwiLmJ0biB7XG4gICAgQGV4dGVuZCAuc21hbGxjYXBzO1xuICAgIGJhY2tncm91bmQ6ICRibGFjaztcbiAgICBjb2xvcjogJHdoaXRlO1xuICAgIHBhZGRpbmc6IDEwcHggMTBweCA3cHg7XG4gICAgdHJhbnNpdGlvbjogYWxsIGVhc2UgMC4zcztcbn0iLCJmb290ZXIge1xuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgIG92ZXJmbG93OiBhdXRvO1xuICAgIGxpIHtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIH1cbn1cblxuLnNtYWxscHJpbnQge1xuICAgIGZsb2F0OiBsZWZ0O1xufVxuXG4uc29jaWFsIHtcbiAgICBmbG9hdDogcmlnaHQ7XG59XG4iLCIuaW5kZXgge1xuICAgICZfYXJjaGl2ZWlzIHtcbiAgICAgICAgYmFja2dyb3VuZDogJGJsYWNrO1xuICAgICAgICBoNCxcbiAgICAgICAgcCB7XG4gICAgICAgICAgICBjb2xvcjogJHdoaXRlO1xuICAgICAgICB9XG4gICAgICAgIGEge1xuICAgICAgICAgICAgY29sb3I6ICR3aGl0ZTtcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCB3aGl0ZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICZfbGlua3Mge1xuICAgICAgICBAZXh0ZW5kIC5jNDtcbiAgICB9XG59XG4iLCIuaW50cm8ge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB3aWR0aDogMTAwdnc7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICBiYWNrZ3JvdW5kOiAkd2hpdGU7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBAaW5jbHVkZSB4bCB7XG4gICAgICAgIGhlaWdodDogNzV2aDtcbiAgICB9XG4gICAgJl90aXRsZSB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgd2lkdGg6IDQzdnc7XG4gICAgICAgIGJvdHRvbTogJGd1dHRlcioyO1xuICAgICAgICB6LWluZGV4OiAxO1xuICAgICAgICBwYWRkaW5nLWxlZnQ6ICRndXR0ZXIvMjtcbiAgICAgICAgaDIge1xuICAgICAgICAgICAgQGV4dGVuZCAuZGlzcGxheTtcbiAgICAgICAgfVxuICAgICAgICBAaW5jbHVkZSB4bCB7XG4gICAgICAgICAgICB3aWR0aDogMzB2dztcbiAgICAgICAgfVxuICAgIH1cbn1cbiIsIlxuLy8gRml4ZWQgTWVudSwgT2ZmLUNhbnZhcyBNZW51ICYgUmVzdWx0cyBNZW51XG4ubWVudSB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHotaW5kZXg6IDM7XG4gICAgcmlnaHQ6ICRndXR0ZXI7XG4gICAgZGlzcGxheTogZmxleDtcblxuICAgIC8vIEJ1cmdlciBJY29uXG4gICAgJl9idXJnZXIge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgbWFyZ2luLWxlZnQ6ICRndXR0ZXIvMztcbiAgICAgICAgbWFyZ2luLXRvcDogJGd1dHRlcjtcbiAgICAgICAgYSB7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICB3aWR0aDogMjdweDtcbiAgICAgICAgICAgIGhlaWdodDogMjdweDtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGVYKDEpIHNjYWxlWSgxKTtcblxuICAgICAgICB9XG4gICAgICAgIHNwYW4ge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgd2lkdGg6IDY1JTtcbiAgICAgICAgICAgIGhlaWdodDogMXB4O1xuICAgICAgICAgICAgYmFja2dyb3VuZDogJGJsYWNrO1xuICAgICAgICAgICAgdG9wOiAyNSU7XG4gICAgICAgICAgICBsZWZ0OiAxNSU7XG4gICAgICAgICAgICB0cmFuc2l0aW9uOiBhbGwgZWFzZSAwLjNzO1xuICAgICAgICB9XG4gICAgICAgIHNwYW46bnRoLWNoaWxkKDIpIHtcbiAgICAgICAgICAgIHRvcDogNTAlO1xuICAgICAgICB9XG4gICAgICAgIHNwYW46bGFzdC1jaGlsZCB7XG4gICAgICAgICAgICB0b3A6IDc1JTtcbiAgICAgICAgfVxuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgIGEge1xuICAgICAgICAgICAgICAgIHNwYW4ge1xuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDFweDtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZVgoMS4yKSBzY2FsZVkoMSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHNwYW46bnRoLWNoaWxkKDIpIHtcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxcHg7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGVYKDAuNyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHNwYW46bGFzdC1jaGlsZCB7XG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogMXB4O1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlWCgxLjIpIHNjYWxlWSgxKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgLy8gU2VhcmNoIEljb25cbiAgICAmX3NlYXJjaCB7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICBtYXJnaW4tdG9wOiAkZ3V0dGVyO1xuICAgICAgICBhIHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgIHdpZHRoOiAzMHB4O1xuICAgICAgICAgICAgaGVpZ2h0OiAzMHB4O1xuICAgICAgICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgdXJsKFwiLi4vaW1hZ2VzL3NlYXJjaC5zdmdcIikgY2VudGVyIGNlbnRlciBuby1yZXBlYXQ7XG4gICAgICAgICAgICB0ZXh0LWluZGVudDogLTk5OTlweDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIEZseW91dCBNZW51XG4gICAgJl9tZW51IHtcbiAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIHJpZ2h0OiAwcHg7XG4gICAgICAgIHotaW5kZXg6IDM7XG4gICAgICAgIG1pbi13aWR0aDogMjN2dztcbiAgICAgICAgcGFkZGluZzogJGd1dHRlciAqIDEuMjtcbiAgICAgICAgcGFkZGluZy1ib3R0b206ICRndXR0ZXIgKiAzO1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAkZ3V0dGVyICogMztcbiAgICAgICAgYmFja2dyb3VuZDogJHdoaXRlO1xuICAgICAgICBib3gtc2hhZG93OiAwcHggMHB4IDIwcHggcmdiYSgwLCAwLCAwLCAwLjI1KTtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xJSk7XG4gICAgICAgIG9wYWNpdHk6IDA7XG4gICAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuXG4gICAgICAgIHRyYW5zaXRpb246IGFsbCBlYXNlIDAuM3M7XG4gICAgICAgICYuYWN0aXZlIHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwJSk7XG4gICAgICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IGF1dG87XG4gICAgICAgIH1cbiAgICAgICAgbGkge1xuICAgICAgICAgICAgcGFkZGluZy1ib3R0b206IDZweDtcbiAgICAgICAgfVxuICAgICAgICB1bCB7XG4gICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMTVweDtcbiAgICAgICAgfVxuICAgICAgICAmX2Nsb3NlIHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgd2lkdGg6IDI1cHg7XG4gICAgICAgICAgICBoZWlnaHQ6IDI1cHg7XG4gICAgICAgICAgICByaWdodDogJGd1dHRlciAqIDI7XG4gICAgICAgICAgICAmOmFmdGVyLFxuICAgICAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgICAgIGxlZnQ6IDUwJTtcbiAgICAgICAgICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKSByb3RhdGUoNDVkZWcpO1xuICAgICAgICAgICAgICAgIHdpZHRoOiAxcHg7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA2MCU7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogJGJsYWNrO1xuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGFsbCBlYXNlIDAuM3M7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAmOmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSkgcm90YXRlKC00NWRlZyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSkgcm90YXRlKDkwZGVnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAwO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAmX2pvaW4ge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgcGFkZGluZzogMTVweDtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICM0YWRiNzM7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgICBib3R0b206IDA7XG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6ICRndXR0ZXIgKiAxLjI7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBTZWFyY2ggcmVzdWx0cyBsaXN0aW5nXG4gICAgJl9yZXN1bHRzIHtcbiAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICByaWdodDogMHB4O1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIHdpZHRoOiA0MHZ3O1xuICAgICAgICB6LWluZGV4OiAxO1xuICAgICAgICBiYWNrZ3JvdW5kOiAkZGFya2dyZXk7XG4gICAgICAgIHBhZGRpbmc6ICRndXR0ZXIqMS41ICRndXR0ZXIqMjtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKGNhbGMoMTAwJSArIDFweCkpO1xuICAgICAgICAmLmFjdGl2ZSB7XG4gICAgICAgICAgICBcbiAgICAgICAgfVxuICAgIH1cblxufVxuIiwiXG4ubmF2IHtcbiAgICBAaW5jbHVkZSB3cmFwKCk7XG4gICAgcGFkZGluZzogMCAkZ3V0dGVyO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICB6LWluZGV4OiAxO1xuICAgIEBleHRlbmQgLmZsZXg7XG5cbiAgICAmX2xvZ28ge1xuICAgICAgICBmbGV4OiAxO1xuICAgICAgICBwYWRkaW5nOiAkZ3V0dGVyICRndXR0ZXIvMjtcbiAgICB9XG5cbiAgICAmX25hdiB7XG4gICAgICAgIGZsZXg6IDE7XG4gICAgICAgIHBhZGRpbmc6ICRndXR0ZXIgJGd1dHRlci8yO1xuICAgICAgICBsaSB7XG4gICAgICAgICAgICBwYWRkaW5nOiAwICRndXR0ZXIvMiAwIDA7XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIH1cbiAgICB9ICAgXG59XG5cbiIsIi5zdGFjayB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHdpZHRoOiA2MHZ3O1xuICAgIHJpZ2h0OiAwO1xuICAgIGhlaWdodDogMTAwJTtcblxuICAgIGxpIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgbGVmdDogNTAlO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICAgICAgdHJhbnNpdGlvbjogYWxsIGVhc2UgMC4zcztcbiAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICB6LWluZGV4OiAxO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAmLnN0YWNrX29uZSB7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtODUlLCAtNzUlKTtcbiAgICAgICAgICAgIC8vIHotaW5kZXg6IDM7XG4gICAgICAgIH1cblxuICAgICAgICAmLnN0YWNrX3R3byB7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtMjUlLCAtNTAlKTtcbiAgICAgICAgICAgIC8vIHotaW5kZXg6IDI7XG4gICAgICAgIH1cblxuICAgICAgICAmLnN0YWNrX3RocmVlIHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC02MCUsIC0xMCUpO1xuICAgICAgICAgICAgLy8gei1pbmRleDogMTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICB9XG5cbiAgICBcbn0iXX0= */
